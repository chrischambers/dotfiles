snippet #! "#!/usr/bin/env (!env)" !
#!/bin/sh

$0
endsnippet

snippet temp "Tempfile" !
${1:TMPFILE}="$(mktemp -t ${2:`!p res = re.sub(r'[^a-zA-Z]', '_', fn)
if not len(res):
    res = "untitled"`})"
${3:${4/(.+)/trap "/}${4:rm -f '$${1/.*\s//}'}${4/(.+)/" 0               # EXIT\n/}${5/(.+)/trap "/}${5:rm -f '$${1/.*\s//}'; exit 1}${5/(.+)/" 2       # INT\n/}${6/(.+)/trap "/}${6:rm -f '$${1/.*\s//}'; exit 1}${6/(.+)/" 1 15    # HUP TERM\n/}}

endsnippet

snippet case "case .. esac (case)" !
case ${1:word} in
    ${2:pattern} )
            $3
            ;;
    ${4:pattern} )
            $5
            ;;
${6:    * )
            $7
            ;;
}esac
$0
endsnippet

snippet elif "elif .. (elif)" !
elif ${2:[[ ${1:condition} ]]}; then
    ${3:#stuff}
$0
endsnippet

snippet oldfor "for i=; i<... done (for)" !
for (( i = 0; i < ${1:10}; i++ )); do
    ${3:#stuff}
done
$0
endsnippet

snippet for "for ... done (for)" !
for ${1:i}${2/.+/ in /}${2:{${3:1}..${4:10}}}; do
    ${3:#stuff}
done
$0
endsnippet

snippet here "here document (here)" !
<<-${2:'${1:TOKEN}'}
    $0
${1/['"`](.+)['"`]/$1/}
endsnippet

snippet if "if ... then (if)" !
if ${2:[[ ${1:condition} ]]}; then
    ${3:#stuff}
fi
$0
endsnippet

snippet until "until … (done)" !
until ${2:[[ ${1:condition} ]]}; do
    ${3:#stuff}
done
$0
endsnippet

snippet while "while … (done)" !
while ${2:[[ ${1:condition} ]]}; do
    ${3:#stuff}
done
$0
endsnippet

snippet def "function definition" b
${1:funcname}() {
    ${2:#body}
}
$0
endsnippet

snippet l "local" b
local ${1:${2:variable}=${3:value}}
$0
endsnippet
