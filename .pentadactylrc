" Alpha Settings: {{{
" colorscheme mine
set showtabline=multitab
set defsearch=yubnub
" }}}

"" Guioptions: {{{
set guioptions=
" Force command line to always display:
set guioptions+=C
" set guioptions+=m
" add menu bar (no-op on OSX):
" set guioptions+=m
" status bar
set guioptions+=s
" add Toolbar (i.e. main bar):
" set guioptions+=T
" add Bookmark Bar:
" set guioptions+=B
" add bottom scrollbar:
set guioptions+=b
" add right scrollbar:
set guioptions+=r
" numbered tabs (OVER favicons, use lowercase for alongside):
set guioptions+=N
"" }}}

" Avoid automatic focussing on first form-field - i.e., keeps vimp in normal
" mode unless otherwise specified.
" set nofocuscontent
set strictfocus
" set ignorecase
" set smartcase
" set searchcase

" For Mac OSX:
" Make External commands (!) use the settings from your standard login shells:
" Source: <url:http://phaseportrait.blogspot.com/2008/12/making-macvim-work-with-vimperators.html>
set shellcmdflag='-c'
" FIXME: curl-fetching of source files fails very frequently; gF won't match gf
" This approach is better for gF, but is not good for Ctrl-I:
" set editor='/Applications/MacVim/MacVim.app/Contents/MacOS/Vim -gf --servername Vim1 --remote-wait-silent +<line> +"sil! call cursor(0, <column>)" <file>'
" This approach works much better for Ctrl-I:
set editor='/Applications/MacVim/MacVim.app/Contents/MacOS/Vim -gf --servername Pentadactyl +<line> +"sil! call cursor(0, <column>)" <file>'
" set editor='open -n /Applications/MacVim/MacVim.app/Contents/MacOS/Vim -gf --servername Pentadactyl +<line> +"sil! call cursor(0, <column>)" <file>'


" Custom Mappings: {{{
nmap -builtin 0gt g0
nmap -builtin $gt g$
" cnoremap :b$ :tablast<CR>

nmap -builtin ,bo :tabonly<CR>
nmap -builtin U :undoall<CR>

nmap -builtin <leader>d :tabopen chrome://mozapps/content/downloads/downloads.xul<CR>

" Stolen from Steve Losh: makes moving up/down more efficient:
nmap -builtin j 3j
nmap -builtin k 3k

" Quick toggle buffers:
" ---------------------
" Activate mapping, then type filter-term: this could be part of the buffer
" name, or part of the url. You can use RET to switch to buffer, or even use
" tab completion. Also works well in conjunction with gb/gB, which will allow
" you to cycle between buffers with similar names.
nmap -builtin ,, :buffers<CR>:b! 
" Convenient alias for switching back and forth between alternate buffer:
nmap -builtin ,. <C-^>

" Firebug Specific:
nmap -builtin <silent> ,fo :emenu Tools.Web Developer.Firebug.Open Firebug<CR>
" Press RET to cycle through elements:
" nmap -builtin ,fs :emenu Tools.Web Developer.Firebug.Search<CR>

" Web Developer Specific:
nmap -builtin ,ni :emenu Tools.Web Developer.Images.Disable Images.All Images<CR>
nmap -builtin ,vh :emenu Tools.Web Developer.Tools.Validate Local HTML<CR>
nmap -builtin ,vc :emenu Tools.Web Developer.Tools.Validate Local CSS<CR>
nmap -builtin ,vih :emenu Tools.Web Developer.Information.View Response Headers<CR>

" nmap -builtin ,nc :emenu Tools.Web Developer.CSS.Disable Styles.All Styles<CR>
" nmap -builtin ,fi :emenu Tools.Firebug.Inspect Element<CR>
" The previous emenu mappings don't work: be sure that the following
" keymappings correspond to the commands above, to work as expected:
nmap -builtin -builtin ,nc <M-S-l>
nmap -builtin ,fi <M-S-c>

" Stumbleupon Specific:
nmap -builtin <silent> ,su :stumble<CR>

" Bookmark Organiser Mapping:
nmap -builtin <silent> ,bms :sb Bookmarks<CR>
nmap -builtin <silent> ,bmo :dia places<CR>
" }}}

" vim: set ft=vimperator:
