set -g prefix `
bind-key ` send-prefix
# set -g prefix2 C-b

set -g utf8
setw -g utf8 on

# Encourage tmux to use 256 colors
# (Note: this seems to have no effect for me.)
set -g default-terminal "screen-256color"

# Lets have windows and panes start from 1:
set -g base-index 1
set -g pane-base-index 1

# Shorten delay when sending commands (can interfere with vim):
set -s escape-time 1
# ----------------------------------------------------------------------------
# Screen Analogues: {{{
# -----------------
# create ^C c
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# list displays *
unbind *
bind * list-clients

# next
unbind n
bind n next-window

# prev P p
unbind p
bind p previous-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A a
unbind ^A
bind ^A last-window
unbind a
bind a last-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K
unbind K
bind K confirm-before "kill-window"

# redisplay L
unbind L
bind L refresh-client
# }}}
# ----------------------------------------------------------------------------

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind v split-window -h
bind - split-window -v

# History
set -g history-limit 10000

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

# " windowlist -b
unbind '"'
bind '"' choose-window

setw -g mode-keys vi
set -g status-keys vi

# # ----
unbind 'H'
unbind 'J'
unbind 'K'
unbind 'L'
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

unbind 'h'
unbind 'j'
unbind 'k'
unbind 'l'
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Mouse Mode:
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Panes:
set -g pane-border-fg colour235
set -g pane-active-border-fg colour235

# Informational messages:
set -g message-bg colour234
set -g message-fg colour208

# ----------------------------------------------------------------------------
# Status Bar: {{{
# -----------
set -g status on              # turn the status bar on
set -g status-utf8 on         # set utf-8 for the status bar
set -g status-interval 5      # set update frequency (default 15s)
# set -g status-position top  # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set -g status-bg colour234
set -g status-fg yellow
set -g status-attr dim

setw -g window-status-fg brightblue
setw -g window-status-bg colour234
setw -g window-status-attr dim

setw -g window-status-bell-fg colour208
setw -g window-status-bell-bg colour234
setw -g window-status-bell-attr blink

setw -g window-status-content-fg colour208
setw -g window-status-content-bg colour234
setw -g window-status-content-attr blink

setw -g window-status-activity-fg colour208
setw -g window-status-activity-bg colour234
setw -g window-status-activity-attr blink

setw -g window-status-format ' #I: #W#[fg=yellow] '
setw -g window-status-current-format ' #I: #W#[fg=yellow] '
setw -g window-status-current-fg colour208
setw -g window-status-current-bg colour233
setw -g window-status-current-attr bright

set -g status-left-length 70  # maximum length
set -g status-right-length 60  # maximum length
set -g status-left "#[fg=green] [#S]"
set -g status-right "#[fg=yellow]%d %b %Y #[fg=green]::%l:%M %p  "
# }}}
# ----------------------------------------------------------------------------

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux.conf.osx'
